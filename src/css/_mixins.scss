@mixin pressable($outTransition: null, $pressed: '.pressed', $focused: '.focused', $transformTarget: '&') {
	border-radius: var(--border-radius);
	background-color: var(--color-bg);
	border: solid var(--border-width) var(--color-border);
	--pressable_t1: 0.1s background-color ease-out;
	@include contribute(transition, var(--pressable_t1), $outTransition);
	padding: 0 calc(var(--spacing) * 2);


	&:disabled {
		background-color: var(--color-bg-disabled);
		color: var(--color-text-disabled);
		border-color: var(--color-border-disabled);
	}

	&:not(:disabled) {
		&:hover {
			background-color: var(--color-bg-hover);
			--pressable_t1: 0s background-color;
		}

		&#{$focused}, &:focus-visible {
			background-color: var(--color-bg-focus);
		}

		&#{$pressed}, &:active {
			--pressable_t1: 0s background-color;
			color: var(--color-text-active);
			background-color: var(--color-bg-pressed);
			#{$transformTarget} {
				transform: scale(0.95);
			}
		}
	}
}


// Contribute values to lists like transform/transition/filter by assigning the value to an out-variable if one is given,
// so that the value can be composed alongside others.
@mixin contribute($prop, $val, $outVar: null) {
	@if $outVar != null {
		#{$outVar}: #{$val}
	} @else {
		#{$prop}: #{$val}
	}
}

@mixin transitionTriggerBase($transition, $selector, $transitionOutVar: null) {
	@include contribute(transition, $transition, $transitionOutVar);
	#{$selector} {
		transition: none;
		@content;
	}
}

@mixin transitionFlash($selector, $transitionOutVar: null) {
	@include transitionTriggerBase(filter 0.2s cubic-bezier(0, 0.1, 0, 1), $selector, $transitionOutVar) {
		filter: brightness(400%);
	}
}

@mixin transitionFlashBg($selector, $transitionOutVar: null) {
	@include transitionTriggerBase(background-color 0.2s cubic-bezier(0, 0.1, 0, 1), $selector, $transitionOutVar) {
		background-color: #909090;
	}
}

@mixin transitionPulse($selector, $transitionOutVar: null) {
	@include transitionTriggerBase(transform 0.2s cubic-bezier(0, 0.1, 0, 1), $selector, $transitionOutVar) {
		transform: scale(0.95);
	}
}
